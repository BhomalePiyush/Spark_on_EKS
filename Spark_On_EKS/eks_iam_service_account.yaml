apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${SERVICE_ACCOUNT}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-role
rules:
  - apiGroup: [""]
    resources: ["pods", "services", "configmaps", "pods/logs", "events"]
    verbs: ["create", "get", "watch", "list", "post", "delete", "patch"]
  - apiGroup: [ "sparkoperator.k8s.io" ]
    resources: [ "sparkapplications" ]
    verbs: [ "create", "get", "watch", "list", "post", "delete", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-role-binding
  namespace: ${EKS_NAMESPACE}
subjects:
  - kind: ServiceAccount
    name: ${SERVICE_ACCOUNT}
    namespace: ${EKS_NAMESPACE}
roleRef:
  kind: Role
  name: spark-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spark-iam-role-cluster-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
  - kind: ServideAccount
    name: ${SERVICE_ACCOUNT}
    namespace: ${EKS_NAMESPACE}